import styles from "@/styles/Home.module.css";
import {
  Avatar,
  Box,
  Flex,
  FormControl,
  FormLabel,
  Input,
  InputGroup,
  InputRightElement,
  ListItem,
  UnorderedList,
} from "@chakra-ui/react";
import axios from "axios";
import Head from "next/head";
import Image from "next/image";
import { useState } from "react";
import { Review } from "./api/gpt";
import { SearchIcon } from "@chakra-ui/icons";

export default function Home() {
  const [url, setUrl] = useState("");
  const [review, setReview] = useState<Review>();
  const [gameId, setGameId] = useState<string>("");

  const onSubmit = async (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();

    const pattern: RegExp = /(\d{6})/;
    const match: RegExpMatchArray | null = url.match(pattern);

    if (!match) return;

    try {
      const gameId = match[1];
      const { data } = await axios.post<{ answer: Review }>("/api/gpt", {
        gameId,
      });
      setReview(data.answer);
      setGameId(gameId);
    } catch (error) {
      console.error(error);
    }
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <Box
          w={400}
          m={6}
          background="rgba( 255, 255, 255, 0.1 )"
          boxShadow="0 8px 32px 0 rgba( 31, 38, 135, 0.1 )"
          borderRadius="10px"
          border="1px solid rgba( 255, 255, 255, 0.18 )"
        >
          <form onSubmit={onSubmit}>
            <FormControl display="flex">
              <FormLabel hidden>Steam Address</FormLabel>
              <InputGroup position="relative">
                <InputRightElement
                  position="absolute"
                  top={4}
                  right={4}
                  pointerEvents="none"
                  children={<SearchIcon color="gray.500" />}
                />
                <Input
                  m={4}
                  backgroundColor="rgba( 255, 255, 255, 0.3 )"
                  border="none"
                  type="text"
                  value={url}
                  onChange={(e) => setUrl(e.target.value)}
                  name="url"
                  placeholder="SteamのURLを入力してください..."
                  _placeholder={{ color: "gray.700" }}
                />
              </InputGroup>
            </FormControl>
          </form>
          {review && gameId && (
            <Image
              src={`https://cdn.akamai.steamstatic.com/steam/apps/${gameId}/header.jpg`}
              alt={`ゲームアイキャッチ`}
              width={365}
              height={200}
              style={{ margin: "16px", borderRadius: "4px" }}
            />
          )}
          {review && (
            <>
              <Flex
                m={4}
                p={3}
                w={16}
                justifyContent="center"
                alignItems="center"
                backgroundColor="rgba( 135, 206, 235, 0.6 )"
                borderRadius="10px"
                border="1px solid rgba( 255, 255, 255, 0.1 )"
              >
                <Image
                  src={`https://twemoji.maxcdn.com/v/latest/svg/1f44d.svg`}
                  alt={`goodアイコン`}
                  width={32}
                  height={32}
                />
              </Flex>
              <Box
                display="flex"
                flexDirection="column"
                mx={4}
                p={4}
                background="rgba( 135, 206, 235, 0.6 )"
                boxShadow="0 8px 32px 0 rgba( 31, 38, 135, 0.1 )"
                borderRadius="10px"
                border="1px solid rgba( 255, 255, 255, 0.1 )"
              >
                <Box>
                  <UnorderedList>
                    {review.positives.map((p) => (
                      <ListItem>{p}</ListItem>
                    ))}
                  </UnorderedList>
                </Box>
              </Box>
              <Flex
                m={4}
                p={3}
                w={16}
                justifyContent="center"
                alignItems="center"
                backgroundColor="rgba( 235, 167, 134, 0.7 )"
                borderRadius="10px"
                border="1px solid rgba( 255, 255, 255, 0.1 )"
              >
                <Image
                  src={`https://twemoji.maxcdn.com/v/latest/svg/1f44e.svg`}
                  alt={`goodアイコン`}
                  width={32}
                  height={32}
                />
              </Flex>
              <Box
                position="relative"
                display="flex"
                flexDirection="column"
                m={4}
                p={4}
                background="rgba( 235, 167, 134, 0.7 )"
                boxShadow="0 8px 32px 0 rgba( 31, 38, 135, 0.1 )"
                borderRadius="10px"
                border="1px solid rgba( 255, 255, 255, 0.18 )"
              >
                <Box>
                  <UnorderedList>
                    {review.negatives.map((n, index) => (
                      <ListItem key={index}>{n}</ListItem>
                    ))}
                  </UnorderedList>
                </Box>
              </Box>
            </>
          )}
        </Box>
      </main>
    </>
  );
}
